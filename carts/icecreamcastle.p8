pico-8 cartridge // http://www.pico-8.com
version 27
__lua__
-- icecream castle
-- david couzelis

startx=8*3
starty=8*14
walk=1.5
jump=-5.2
gravity=0.5
max_fall=4

level=1
tries=1

gameover=false
gamewin=false

-- all actors
actor={}

function make_actor(k,x,y)

 local a = {
  k=k,        -- sprite num
  x=x,        -- position
  y=y,
  dx=0,       -- velocity
  dy=0,
  frm=0,      -- animation frame
  frms=1,     -- total frames
  aspd=1,     -- anim speed
  atim=0,     -- anim time
  w=7,        -- dimentions
  h=7,
  grav=false, -- has gravity
  vis=true,   -- is visible
  update=function (a) end
 }
 
 add(actor,a)
 
 return a
end

function solid(x,y)
 -- true if sprite flag is 1
 return fget(mget(x/8,y/8),1)
end

function solid_area(x,y,w,h)
 -- true if collision in area
 return
  solid(x,y) or
  solid(x+w,y) or
  solid(x,y+h) or
  solid(x+w,y+h)
end

function point_in(a,x,y)
 return x>=a.x and x<=a.x+a.w and
   y>=a.y and y<=a.y+a.h
end

function actor_collision(a1,a2)
 return point_in(a1,a2.x,a2.y) or
   point_in(a1,a2.x+a2.w,a2.y) or
   point_in(a1,a2.x,a2.y+a2.h) or
   point_in(a1,a2.x+a2.w,a2.y+a2.h)
end

function update_blade(a)
 -- hit a wall and bounce
 if a.dx>0 then
  if solid(a.x+a.w+1,a.y) then
   a.dx*=-1
  end
 elseif a.dx<0 then
  if solid(a.x-1,a.y) then
   a.dx*=-1
  end
 end
end

function update_beam(a)
 -- flash on and off
 a.ftim+=1
 if a.ftim>=a.fspd then
  a.vis=not a.vis
  a.ftim=0
 end
end

function update_actor(a)
 -- call actor specific update
 a.update(a)

 if a.grav then
  -- add gravity
  a.dy+=gravity
  if a.dy>max_fall then
   a.dy=max_fall
  end
 end

 -- possible to move left/right?
 local orig=a.x
 -- try moving
 a.x+=a.dx
 -- find the direction
 local d=1
 if orig>a.x then d=-1 end
 -- if collision, move back
 -- pixel by pixel
 while solid_area(a.x,a.y,a.w,a.h) do
  a.x-=d
  a.dx=0
 end
 
 -- possible to move up/down?
 orig=a.y
 a.y+=a.dy
 d=1
 if orig>a.y then d=-1 end
 while solid_area(a.x,a.y,a.w,a.h) do
  a.y-=d
  a.dy=0
 end

 -- animate
 a.atim+=1
 if a.atim>=a.aspd then
  a.frm+=1
  a.frm%=a.frms
  a.atim=0
 end
end

function can_jump()
 return solid(pl.x,pl.y+pl.h+1) or
   solid(pl.x+pl.w,pl.y+pl.h+1)
end

function control_player()
 -- walk
 if btn(0) then
  pl.dx=-walk
  pl.l=true
 end
 if btn(1) then
  pl.dx=walk
  pl.l=false
 end
 if not btn(0) and not btn(1) then
  pl.dx=0
 end
 -- jump
 if (btnp(4) or btnp(5)) and can_jump() then
  pl.dy=jump
 end
end

function draw_actor(a)
 if a.vis then
  spr(a.k+a.frm,a.x,a.y,1,1,a.l,false)
 end
end

function create_beam(x,y)
 a=make_actor(6,8*x,8*y)
 a.fspd=30
 a.ftim=0
 a.update=update_beam
end

function enemy_collision()
 -- true if collision with enemy
 for a in all(actor) do
  if a.vis and actor_collision(pl,a) then
   if fget(a.k,2) then
    return true
   end
  end
 end
 return false
end

function reset_level()
 -- reset the level

 gameover=false
 gamewin=false
 
 -- delete old actors
 actor={}

 -- setup the level
 -- create the player
 pl=make_actor(1,startx,starty)
 pl.frms=2
 pl.aspd=6
 pl.l=false -- facing left?
 pl.grav=true
 
 local a

 -- create the spinning blades
 a=make_actor(7,8*10,8*6)
 a.frms=2
 a.aspd=2
 a.dx=1
 a.update=update_blade

 a=make_actor(7,8*8,8*1)
 a.frms=2
 a.aspd=2
 a.dx=1
 a.update=update_blade
 
 -- create beams
 create_beam(6,11)
 create_beam(6,12)
 create_beam(6,13)
 create_beam(6,14)
 
 create_beam(10,11)
 create_beam(10,12)
 create_beam(10,13)
 create_beam(10,14)
 
 create_beam(7,1)
 create_beam(7,2)
 create_beam(7,3)
 create_beam(7,4)
 
 -- create spikes
 make_actor(5,8*6,8*10)
 make_actor(5,8*7,8*10)
 make_actor(5,8*10,8*10)
 make_actor(5,8*6,8*5)
 make_actor(5,8*8,8*5)
 make_actor(5,8*9,8*5)
 
 -- create target
 tgt=make_actor(9,8*13,8*4)
 tgt.frms=2
 tgt.aspd=6
 
 -- create heart
 hrt=make_actor(11,(8*12)+4,(8*3)-1)
 hrt.vis=false 
end

function _init()
 -- dark_blue is transparent
 palt(0,false)
 palt(1,true)
 
 reset_level()
end

function game_win()
 pl.x=(8*12)+1
 pl.y=8*4
 pl.dx=0
 pl.dy=0
 hrt.vis=true
 gamewin=true
end

function game_over()
 gameover=true
end

function _update()
 if gameover then
  -- you lose :(
  
  if btnp(4) or btnp(5) then
   reset_level()
   tries+=1
  end
  
 elseif gamewin then
  -- you win! :)

 else
  -- gameplay
  
  -- input
  if not gamewin then
   control_player()
  end
  -- movement
  foreach(actor,update_actor)
  -- collision?
  if enemy_collision() then
   game_over()
  end
  -- you win the game
  if actor_collision(pl,tgt) then
   game_win()
  end
 end
end

function _draw()
 cls(0)
 -- draw map
 map()
 if gameover then
  printo("you died.",8*6,8*8)  
  printo("jump to try again.",8*4,8*9)  
 elseif gamewin then
  printo("you win!!",8*6,8*8)  
  printo("jump to continue.",8*4,8*9)  
 else
  -- draw actors
  foreach(actor,draw_actor)
 end
 -- hud
 printo("round "..level,0,0)
 printo("tries "..tries,0,8)
end
-->8
function printo(s,x,y)
 print(s,x-1,y,0)
 print(s,x+1,y,0)
 print(s,x,y-1,0)
 print(s,x,y+1,0)
 print(s,x,y,7)
end
__gfx__
000000001ffffff11111111177753b77005000000500050019a77a91ee1111ee111ee111117e7811111111111111111100056767777777777676500000000000
000000001ffffff11ffffff177757b77005000000500050019a77a91e222222e112222111e7777b1117e78111111111100565677777777777765650000000000
00700700f4f0f0ff1ffffff177757777005000000650065019a77a911222222112222221170707711e7777b11881188100056767777777777676500000000000
00077000f444044ff4f0f0ff55555557555555555650565019a77a9112202221e222022e177077e1170707718788888800565677777777777765650000000000
0007700014444441f444044f337777b5000005005650565019a77a9112220221e220222e18777b71177077e18888888800056767777777777676500000000000
0070070011f888f1144444417bb77775000005005665566519a77a9112222221122222211949494118777b711888888100565677777777777765650000000000
000000001118881111f888f177777775000005005665566519a77a91e222222e1122221111949411119494111188881100056767777777777676500000000000
00000000111515111115151155575555000000005555555519a77a91ee1111ee111ee11111194111111941111118811100565677777777777765650000000000
__gff__
0000000200040404040000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0303030303030303030303030303030300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0300000304000004040400030303030300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
03000004000000000000000300000c0d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
03000000000000000000000000000c0d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
03000000000000000000000000000c0d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0300000303000303000003030303030300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0300000403040000000000000403030300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0303000003000000000000000404030300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0303000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0303000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0303030303030000030300030300000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0303040400000000000000000000000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0d0e000400000000000000000000030300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0d0e000000000004040000000000030300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0d0e000000000000000000000000030300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0303030303030303030303030303030300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
